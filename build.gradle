plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.demo.api.automation'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'io.rest-assured:rest-assured:5.4.0'
	testImplementation 'io.rest-assured:json-path:5.4.0'
	testImplementation 'io.rest-assured:xml-path:5.4.0'
	testImplementation 'org.hamcrest:hamcrest:2.2'
	implementation 'io.rest-assured:json-schema-validator:4.3.1'
}

test {
	useJUnitPlatform()
	if (System.getProperty("includeTags")) {
		useJUnitPlatform {
			includeTags System.getProperty('includeTags').split(",")
		}
	}

	/*
	useJUnitPlatform{
		if (System.getProperty("junit.platform.include.tags")) {
			systemProperties["junit.platform.include.tags"] = System.getProperty("junit.platform.include.tags").split(',')
		}

		if (System.getProperty("junit.platform.exclude.tags")) {
			systemProperties["junit.platform.exclude.tags"] = System.getProperty("junit.platform.exclude.tags").split(',')
		}

	 */

	// show test logw3
	// Show test execution logs

	testLogging {
		events "started", "passed", "skipped", "failed"
		exceptionFormat "full"
		showStandardStreams = true
	}

}
